services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/example_db
      PORT: 4000
      ELIXIR_PROMETHEUS_METRICS_ENABLED: "true" # Enable Prometheus exporter in your app
      PROMETHEUS_METRICS_PORT: 9568
    ports:
      - "4000:4000"
      - "9568:9568" # Prometheus metrics port
    depends_on:
      - db
      - grafana
    networks:
      - app_network

  db:
    image: timescale/timescaledb:latest-pg16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: example_db
      TIMESCALEDB_TELEMETRY: "off" # Disable telemetry if needed
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app_network

  proxy:
    image: nginx:alpine
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app_network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - app_network

networks:
  app_network:

volumes:
  db_data:
